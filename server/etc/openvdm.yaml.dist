# ----------------------------------------------------------------------------------- #
#
#         FILE:  openvdm.yaml
#
#  DESCRIPTION:  OpenVDM configuration file, YAML format
#
#         BUGS:
#        NOTES:
#       AUTHOR:  Webb Pinner
#      COMPANY:  Capable Solutions
#      VERSION:  2.5
#      CREATED:  2016-02-02
#     REVISION:  2021-01-06
#
# LICENSE INFO: Open Vessel Data Management v2.5 (OpenVDMv2)
#               Copyright (C) OceanDataRat.org 2021
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/gpl-3.0.html>.
#
# ----------------------------------------------------------------------------------- #

# The siteRoot for the OpenVDM web-application/API
siteRoot: "http://127.0.0.1/OpenVDMv2/"

# The transferInterval defines the interval for performing collectionSystemTransfer.
# The unit is in minutes.
transferInterval: 5

# The gearmanServer is the location and port number for the Gearman server used in
# conjunction with OpenVDM.  The required format is <server>:<port>
gearmanServer: "localhost:4730"

# Whether or not to hide all directories in the CruiseData directory other than the
# current cruise. (Yes|No))
showOnlyCurrentCruiseDir: No

# The dashboardData section defines where the dashboardData processing scripts reside
# and the expected suffix for each processing file.  It should include 2 directives:
# processingScriptDir --> the full path containing the dashboardData processing scripts
# processingScriptSuffix --> the suffix appended to dashboardData processing scripts
#     i.e. with SCS_dataDashboard.py the suffix is _dataDashboard.py
dashboardData:
    processingScriptDir: "../plugins"
    processingScriptSuffix: "_plugin.py"

# The hooks section contains any additional Gearman tasks that should be performed
# after the successful completion of the primary OpenVDM Gearman task.  Any subsequent
# tasks called with be called as background Gearman tasks so to not interfer with
# OpenVDM's primary operation.
hooks:
    runCollectionSystemTransfer:
        - updateDataDashboard
        - updateMD5Summary
        - postCollectionSystemTransfer
    updateDataDashboard:
        - updateMD5Summary
        - postDataDashboard
    rebuildDataDashboard:
        - updateMD5Summary
        - postDataDashboard
    setupNewCruise:
        - postSetupNewCruise
    setupNewLowering:
        - postSetupNewLowering
    finalizeCurrentCruise:
        - postFinalizeCurrentCruise
    finalizeCurrentLowering:
        - postFinalizeCurrentLowering

# The postHookCommands section contains any additional commands that should be performed
# after the successful completion of the primary OpenVDM Gearman task.  Any subsequent
# tasks called with be called as background Gearman tasks so to not interfer with
# OpenVDM's primary operation.
postHookCommands:
    postCollectionSystemTransfer:
        #- collectionSystemTransferName: OpenRVDAS
        #  commandList:
        #  - name: "R2R NavManager"
        #    command:
        #    - /opt/openvdm/venv/bin/python
        #    - /opt/openvdm/bin/r2r_nav_manager.py
        #    - SCS
    postDataDashboard:
        #- collectionSystemTransferName: OpenRVDAS
        #  commandList:
        #  - name: "Build cruise tracks"
        #    command:
        #    - /opt/openvdm/venv/bin/python
        #    - /opt/openvdm/bin/build_cruise_tracks.py
    postSetupNewCruise:
        #commandList:
        #- name: "Setup Remote Cruise Directories"
        #  command:
        #  - /opt/openvdm/venv/bin/python
        #  - /opt/openvdm/bin/setup_remote_cruise_directories.py
    postSetupNewLowering:
        #commandList:
        #- name: "Setup Remote Lowering Directories"
        #  command:
        #  - /opt/openvdm/venv/bin/python
        #  - /opt/openvdm/bin/setup_remote_lowering_directories.py
    postFinalizeCurrentCruise:
        #commandList:
        #- name: "Export Sealog Vessel Data"
        #  command:
        #  - /opt/sealog-server-vessel/venv/bin/python
        #  - /opt/sealog-server-vessel/misc/sealog_vessel_data_export.py
    postFinalizeCurrentLowering:
        #commandList:
        #- name: "Export Sealog Vessel Data"
        #  command:
        #  - /opt/sealog-server-vehicle/venv/bin/python
        #  - /opt/sealog-server-vehicle/misc/sealog_vehicle_data_export.py
