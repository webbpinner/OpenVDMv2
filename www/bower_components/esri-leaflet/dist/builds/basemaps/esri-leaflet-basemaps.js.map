{"version":3,"sources":["../../../src/EsriLeaflet.js","../../../src/Request.js","../../../src/Layers/BasemapLayer.js","../../../src/Controls/Logo.js"],"names":["EsriLeaflet","VERSION","Layers","Services","Controls","Tasks","Util","Support","CORS","window","XMLHttpRequest","pointerEvents","document","documentElement","style","L","esri","serialize","params","data","f","key","hasOwnProperty","value","param","type","Object","prototype","toString","call","length","JSON","stringify","join","valueOf","encodeURIComponent","createRequest","callback","context","httpRequest","onerror","e","onreadystatechange","falseFn","error","code","message","response","readyState","parse","responseText","callbacks","_EsriLeafletCallbacks","Request","request","url","paramString","requestLength","open","send","get","JSONP","warn","setRequestHeader","post","XMLHTTP","callbackId","script","DomUtil","create","body","src","id","responseType","abort","_callback","tileProtocol","location","protocol","BasemapLayer","TileLayer","extend","statics","TILES","Streets","urlTemplate","attributionUrl","options","hideLogo","logoPosition","minZoom","maxZoom","subdomains","attribution","Topographic","Oceans","OceansLabels","NationalGeographic","DarkGray","DarkGrayLabels","Gray","GrayLabels","Imagery","ImageryLabels","ImageryTransportation","ShadedRelief","ShadedReliefLabels","Terrain","TerrainLabels","initialize","config","Error","tileOptions","this","setOptions","_getAttributionData","_logo","Logo","position","onAdd","map","_hasEsriLogo","addTo","on","_updateMapAttribution","onRemove","_container","removeControl","off","getAttribution","bind","attributions","_attributions","c","contributors","contributor","i","coverageAreas","coverageArea","southWest","LatLng","bbox","northEast","push","score","bounds","LatLngBounds","zoomMin","zoomMax","sort","a","b","_map","attributionControl","newAttributions","getBounds","zoom","getZoom","text","match","intersects","substr","attributionElement","querySelector","innerHTML","maxWidth","getSize","x","fire","basemapLayer","Control","marginTop","marginLeft","marginBottom","marginRight","div","_adjustLogo","_size","newSize","mapSize","y","logo"],"mappings":"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","file":"esri-leaflet-basemaps.js","sourcesContent":["var EsriLeaflet = { //jshint ignore:line\n  VERSION: '1.0.5',\n  Layers: {},\n  Services: {},\n  Controls: {},\n  Tasks: {},\n  Util: {},\n  Support: {\n    CORS: !!(window.XMLHttpRequest && 'withCredentials' in new XMLHttpRequest()),\n    pointerEvents: document.documentElement.style.pointerEvents === ''\n  }\n};\n\nif(typeof window !== 'undefined' && window.L){\n  window.L.esri = EsriLeaflet;\n}\n","(function(EsriLeaflet){\n\n  var callbacks = 0;\n\n  window._EsriLeafletCallbacks = {};\n\n  function serialize(params){\n    var data = '';\n\n    params.f = params.f || 'json';\n\n    for (var key in params){\n      if(params.hasOwnProperty(key)){\n        var param = params[key];\n        var type = Object.prototype.toString.call(param);\n        var value;\n\n        if(data.length){\n          data += '&';\n        }\n\n        if (type === '[object Array]'){\n          value = (Object.prototype.toString.call(param[0]) === '[object Object]') ? JSON.stringify(param) : param.join(',');\n        } else if (type === '[object Object]') {\n          value = JSON.stringify(param);\n        } else if (type === '[object Date]'){\n          value = param.valueOf();\n        } else {\n          value = param;\n        }\n\n        data += encodeURIComponent(key) + '=' + encodeURIComponent(value);\n      }\n    }\n\n    return data;\n  }\n\n  function createRequest(callback, context){\n    var httpRequest = new XMLHttpRequest();\n\n    httpRequest.onerror = function(e) {\n      httpRequest.onreadystatechange = L.Util.falseFn;\n\n      callback.call(context, {\n        error: {\n          code: 500,\n          message: 'XMLHttpRequest error'\n        }\n      }, null);\n    };\n\n    httpRequest.onreadystatechange = function(){\n      var response;\n      var error;\n\n      if (httpRequest.readyState === 4) {\n        try {\n          response = JSON.parse(httpRequest.responseText);\n        } catch(e) {\n          response = null;\n          error = {\n            code: 500,\n            message: 'Could not parse response as JSON. This could also be caused by a CORS or XMLHttpRequest error.'\n          };\n        }\n\n        if (!error && response.error) {\n          error = response.error;\n          response = null;\n        }\n\n        httpRequest.onerror = L.Util.falseFn;\n\n        callback.call(context, error, response);\n      }\n    };\n\n    return httpRequest;\n  }\n\n  // AJAX handlers for CORS (modern browsers) or JSONP (older browsers)\n  EsriLeaflet.Request = {\n    request: function(url, params, callback, context){\n      var paramString = serialize(params);\n      var httpRequest = createRequest(callback, context);\n      var requestLength = (url + '?' + paramString).length;\n\n      // request is less then 2000 characters and the browser supports CORS, make GET request with XMLHttpRequest\n      if(requestLength <= 2000 && L.esri.Support.CORS){\n        httpRequest.open('GET', url + '?' + paramString);\n        httpRequest.send(null);\n\n      // request is less more then 2000 characters and the browser supports CORS, make POST request with XMLHttpRequest\n      } else if (requestLength > 2000 && L.esri.Support.CORS){\n        httpRequest.open('POST', url);\n        httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        httpRequest.send(paramString);\n\n      // request is less more then 2000 characters and the browser does not support CORS, make a JSONP request\n      } else if(requestLength <= 2000 && !L.esri.Support.CORS){\n        return L.esri.Request.get.JSONP(url, params, callback, context);\n\n      // request is longer then 2000 characters and the browser does not support CORS, log a warning\n      } else {\n        EsriLeaflet.Util.warn('a request to ' + url + ' was longer then 2000 characters and this browser cannot make a cross-domain post request. Please use a proxy http://esri.github.io/esri-leaflet/api-reference/request.html');\n        return;\n      }\n\n      return httpRequest;\n    },\n\n    post: {\n      XMLHTTP: function (url, params, callback, context) {\n        var httpRequest = createRequest(callback, context);\n        httpRequest.open('POST', url);\n        httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        httpRequest.send(serialize(params));\n\n        return httpRequest;\n      }\n    },\n\n    get: {\n      CORS: function (url, params, callback, context) {\n        var httpRequest = createRequest(callback, context);\n\n        httpRequest.open('GET', url + '?' + serialize(params), true);\n        httpRequest.send(null);\n\n        return httpRequest;\n      },\n      JSONP: function(url, params, callback, context){\n        var callbackId = 'c' + callbacks;\n\n        params.callback = 'window._EsriLeafletCallbacks.' + callbackId;\n\n        var script = L.DomUtil.create('script', null, document.body);\n        script.type = 'text/javascript';\n        script.src = url + '?' +  serialize(params);\n        script.id = callbackId;\n\n        window._EsriLeafletCallbacks[callbackId] = function(response){\n          if(window._EsriLeafletCallbacks[callbackId] !== true){\n            var error;\n            var responseType = Object.prototype.toString.call(response);\n\n            if(!(responseType === '[object Object]' || responseType === '[object Array]')){\n              error = {\n                error: {\n                  code: 500,\n                  message: 'Expected array or object as JSONP response'\n                }\n              };\n              response = null;\n            }\n\n            if (!error && response.error) {\n              error = response;\n              response = null;\n            }\n\n            callback.call(context, error, response);\n            window._EsriLeafletCallbacks[callbackId] = true;\n          }\n        };\n\n        callbacks++;\n\n        return {\n          id: callbackId,\n          url: script.src,\n          abort: function(){\n            window._EsriLeafletCallbacks._callback[callbackId]({\n              code: 0,\n              message: 'Request aborted.'\n            });\n          }\n        };\n      }\n    }\n  };\n\n  // choose the correct AJAX handler depending on CORS support\n  EsriLeaflet.get = (EsriLeaflet.Support.CORS) ? EsriLeaflet.Request.get.CORS : EsriLeaflet.Request.get.JSONP;\n\n  // always use XMLHttpRequest for posts\n  EsriLeaflet.post = EsriLeaflet.Request.post.XMLHTTP;\n\n  // expose a common request method the uses GET\\POST based on request length\n  EsriLeaflet.request = EsriLeaflet.Request.request;\n\n})(EsriLeaflet);","(function(EsriLeaflet){\n\n  var tileProtocol = (window.location.protocol !== 'https:') ? 'http:' : 'https:';\n\n  EsriLeaflet.Layers.BasemapLayer = L.TileLayer.extend({\n    statics: {\n      TILES: {\n        Streets: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\n          attributionUrl: 'https://static.arcgis.com/attribution/World_Street_Map',\n          options: {\n            hideLogo: false,\n            logoPosition: 'bottomright',\n            minZoom: 1,\n            maxZoom: 19,\n            subdomains: ['server', 'services'],\n            attribution: 'Esri'\n          }\n        },\n        Topographic: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n          attributionUrl: 'https://static.arcgis.com/attribution/World_Topo_Map',\n          options: {\n            hideLogo: false,\n            logoPosition: 'bottomright',\n            minZoom: 1,\n            maxZoom: 19,\n            subdomains: ['server', 'services'],\n            attribution: 'Esri'\n          }\n        },\n        Oceans: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Base/MapServer/tile/{z}/{y}/{x}',\n          attributionUrl: 'https://static.arcgis.com/attribution/Ocean_Basemap',\n          options: {\n            hideLogo: false,\n            logoPosition: 'bottomright',\n            minZoom: 1,\n            maxZoom: 16,\n            subdomains: ['server', 'services'],\n            attribution: 'Esri'\n          }\n        },\n        OceansLabels: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Reference/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: true,\n            logoPosition: 'bottomright',\n            //pane: 'esri-label',\n            minZoom: 1,\n            maxZoom: 16,\n            subdomains: ['server', 'services']\n          }\n        },\n        NationalGeographic: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: false,\n            logoPosition: 'bottomright',\n            minZoom: 1,\n            maxZoom: 16,\n            subdomains: ['server', 'services'],\n            attribution: 'Esri'\n          }\n        },\n        DarkGray: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Dark_Gray_Base/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: false,\n            logoPosition: 'bottomright',\n            minZoom: 1,\n            maxZoom: 16,\n            subdomains: ['server', 'services'],\n            attribution: 'Esri, DeLorme, HERE'\n          }\n        },\n        DarkGrayLabels: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Dark_Gray_Reference/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: true,\n            logoPosition: 'bottomright',\n            //pane: 'esri-label',\n            minZoom: 1,\n            maxZoom: 16,\n            subdomains: ['server', 'services']\n          }\n        },\n        Gray: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: false,\n            logoPosition: 'bottomright',\n            minZoom: 1,\n            maxZoom: 16,\n            subdomains: ['server', 'services'],\n            attribution: 'Esri, NAVTEQ, DeLorme'\n          }\n        },\n        GrayLabels: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Reference/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: true,\n            logoPosition: 'bottomright',\n            //pane: 'esri-label',\n            minZoom: 1,\n            maxZoom: 16,\n            subdomains: ['server', 'services']\n          }\n        },\n        Imagery: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: false,\n            logoPosition: 'bottomright',\n            minZoom: 1,\n            maxZoom: 19,\n            subdomains: ['server', 'services'],\n            attribution: 'Esri, DigitalGlobe, GeoEye, i-cubed, USDA, USGS, AEX, Getmapping, Aerogrid, IGN, IGP, swisstopo, and the GIS User Community'\n          }\n        },\n        ImageryLabels: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: true,\n            logoPosition: 'bottomright',\n            //pane: 'esri-label',\n            minZoom: 1,\n            maxZoom: 19,\n            subdomains: ['server', 'services']\n          }\n        },\n        ImageryTransportation: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}',\n          //pane: 'esri-label',\n          options: {\n            hideLogo: true,\n            logoPosition: 'bottomright',\n            minZoom: 1,\n            maxZoom: 19,\n            subdomains: ['server', 'services']\n          }\n        },\n        ShadedRelief: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: false,\n            logoPosition: 'bottomright',\n            minZoom: 1,\n            maxZoom: 13,\n            subdomains: ['server', 'services'],\n            attribution: 'Esri, NAVTEQ, DeLorme'\n          }\n        },\n        ShadedReliefLabels: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places_Alternate/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: true,\n            logoPosition: 'bottomright',\n            //pane: 'esri-label',\n            minZoom: 1,\n            maxZoom: 12,\n            subdomains: ['server', 'services']\n          }\n        },\n        Terrain: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: false,\n            logoPosition: 'bottomright',\n            minZoom: 1,\n            maxZoom: 13,\n            subdomains: ['server', 'services'],\n            attribution: 'Esri, USGS, NOAA'\n          }\n        },\n        TerrainLabels: {\n          urlTemplate: tileProtocol + '//{s}.arcgisonline.com/ArcGIS/rest/services/Reference/World_Reference_Overlay/MapServer/tile/{z}/{y}/{x}',\n          options: {\n            hideLogo: true,\n            logoPosition: 'bottomright',\n            //pane: 'esri-label',\n            minZoom: 1,\n            maxZoom: 13,\n            subdomains: ['server', 'services']\n          }\n        }\n      }\n    },\n    initialize: function(key, options){\n      var config;\n\n      // set the config variable with the appropriate config object\n      if (typeof key === 'object' && key.urlTemplate && key.options){\n        config = key;\n      } else if(typeof key === 'string' && EsriLeaflet.BasemapLayer.TILES[key]){\n        config = EsriLeaflet.BasemapLayer.TILES[key];\n      } else {\n        throw new Error('L.esri.BasemapLayer: Invalid parameter. Use one of \"Streets\", \"Topographic\", \"Oceans\", \"OceansLabels\", \"NationalGeographic\", \"Gray\", \"GrayLabels\", \"DarkGray\", \"DarkGrayLabels\", \"Imagery\", \"ImageryLabels\", \"ImageryTransportation\", \"ShadedRelief\", \"ShadedReliefLabels\", \"Terrain\" or \"TerrainLabels\"');\n      }\n\n      // merge passed options into the config options\n      var tileOptions = L.Util.extend(config.options, options);\n\n      // call the initialize method on L.TileLayer to set everything up\n      L.TileLayer.prototype.initialize.call(this, config.urlTemplate, L.Util.setOptions(this, tileOptions));\n\n      // if this basemap requires dynamic attribution set it up\n      if(config.attributionUrl){\n        this._getAttributionData(config.attributionUrl);\n      }\n      this._logo = new EsriLeaflet.Controls.Logo({\n        position: this.options.logoPosition\n      });\n    },\n    onAdd: function(map){\n      if(!this.options.hideLogo && !map._hasEsriLogo){\n        this._logo.addTo(map);\n        map._hasEsriLogo = true;\n      }\n\n      // if(this.options.pane && EsriLeaflet.Support.pointerEvents){\n      //   this._initPane();\n      // }\n\n      L.TileLayer.prototype.onAdd.call(this, map);\n\n      map.on('moveend', this._updateMapAttribution, this);\n    },\n    onRemove: function(map){\n      // check to make sure the logo hasn't already been removed\n      if(map._hasEsriLogo && this._logo && this._logo._container){\n        map.removeControl(this._logo);\n        map._hasEsriLogo = false;\n      }\n\n      L.TileLayer.prototype.onRemove.call(this, map);\n\n      map.off('moveend', this._updateMapAttribution, this);\n    },\n    getAttribution:function(){\n      var attribution = '<span class=\"esri-attributions\" style=\"line-height:14px; vertical-align: -3px; text-overflow:ellipsis; white-space:nowrap; overflow:hidden; display:inline-block;\">' + this.options.attribution + '</span>'/* + logo*/;\n      return attribution;\n    },\n    // _initPane: function(){\n    //   if(!this._map.getPane(this.options.pane)){\n    //     var pane = this._map.createPane(this.options.pane);\n    //     pane.style.pointerEvents = 'none';\n    //     pane.style.zIndex = 5;\n    //   }\n    // },\n    _getAttributionData: function(url){\n      L.esri.Request.get.JSONP(url, {}, L.Util.bind(function(error, attributions){\n        this._attributions = [];\n\n        for (var c = 0; c < attributions.contributors.length; c++) {\n          var contributor = attributions.contributors[c];\n          for (var i = 0; i < contributor.coverageAreas.length; i++) {\n            var coverageArea = contributor.coverageAreas[i];\n            var southWest = new L.LatLng(coverageArea.bbox[0], coverageArea.bbox[1]);\n            var northEast = new L.LatLng(coverageArea.bbox[2], coverageArea.bbox[3]);\n            this._attributions.push({\n              attribution: contributor.attribution,\n              score: coverageArea.score,\n              bounds: new L.LatLngBounds(southWest, northEast),\n              minZoom: coverageArea.zoomMin,\n              maxZoom: coverageArea.zoomMax\n            });\n          }\n        }\n\n        this._attributions.sort(function(a, b){\n          return b.score - a.score;\n        });\n\n        this._updateMapAttribution();\n      }, this));\n    },\n    _updateMapAttribution: function(){\n      if(this._map && this._map.attributionControl && this._attributions){\n        var newAttributions = '';\n        var bounds = this._map.getBounds();\n        var zoom = this._map.getZoom();\n\n        for (var i = 0; i < this._attributions.length; i++) {\n          var attribution = this._attributions[i];\n          var text = attribution.attribution;\n          if(!newAttributions.match(text) && bounds.intersects(attribution.bounds) && zoom >= attribution.minZoom && zoom <= attribution.maxZoom) {\n            newAttributions += (', ' + text);\n          }\n        }\n        newAttributions = newAttributions.substr(2);\n        var attributionElement = this._map.attributionControl._container.querySelector('.esri-attributions');\n        attributionElement.innerHTML = newAttributions;\n        attributionElement.style.maxWidth =  (this._map.getSize().x * 0.65) + 'px';\n        this.fire('attributionupdated', {\n          attribution: newAttributions\n        });\n      }\n    }\n  });\n\n  EsriLeaflet.BasemapLayer = EsriLeaflet.Layers.BasemapLayer;\n\n  EsriLeaflet.Layers.basemapLayer = function(key, options){\n    return new EsriLeaflet.Layers.BasemapLayer(key, options);\n  };\n\n  EsriLeaflet.basemapLayer = function(key, options){\n    return new EsriLeaflet.Layers.BasemapLayer(key, options);\n  };\n\n})(EsriLeaflet);\n","EsriLeaflet.Controls.Logo = L.Control.extend({\n  options: {\n    position: 'bottomright',\n    marginTop: 0,\n    marginLeft: 0,\n    marginBottom: 0,\n    marginRight: 0\n  },\n\n  onAdd: function () {\n    var div = L.DomUtil.create('div', 'esri-leaflet-logo');\n    div.style.marginTop = this.options.marginTop;\n    div.style.marginLeft = this.options.marginLeft;\n    div.style.marginBottom = this.options.marginBottom;\n    div.style.marginRight = this.options.marginRight;\n    div.innerHTML = this._adjustLogo(this._map._size);\n\n    this._map.on('resize', function(e){\n      div.innerHTML = this._adjustLogo(e.newSize);\n    }, this);\n\n    return div;\n  },\n\n  _adjustLogo: function (mapSize) {\n    if (mapSize.x <= 600 || mapSize.y <= 600){\n      return '<a href=\"https://developers.arcgis.com\" style=\"border: none;\"><img src=\"https://js.arcgis.com/3.13/esri/images/map/logo-sm.png\" alt=\"Powered by Esri\" style=\"border: none;\"></a>';\n    }\n    else {\n      return '<a href=\"https://developers.arcgis.com\" style=\"border: none;\"><img src=\"https://js.arcgis.com/3.13/esri/images/map/logo-med.png\" alt=\"Powered by Esri\" style=\"border: none;\"></a>';\n    }\n  }\n\n});\n\nEsriLeaflet.Controls.logo = function(options){\n  return new L.esri.Controls.Logo(options);\n};\n"]}